{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentTime","Date","toUTCString","slice","Clock","state","today","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","leftClick","rightClick","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAEA,SAASA,IAGP,OAFa,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAON,KAFX,EAKEO,QAAyB,KAL3B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,MAAON,MAGvBY,QAAQC,KAAR,UAAgB,EAAKR,MAAMC,UAC1B,OAbP,gCAgBE,SAAmBQ,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAnBzE,kCAuBE,WACMP,KAAKD,SACPE,OAAOS,cAAcV,KAAKD,WAzBhC,oBA6BE,WACE,IAAQD,EAAUE,KAAKH,MAAfC,MACAS,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,WA1CX,GAA2Bc,aCZ3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAQX,IAAMG,EAAb,4MACEpB,MAAQ,CACNU,UAAW,UACXW,UAAU,GAHd,EAMEnB,QAAyB,KAN3B,EA0BEoB,UAAY,WACV,EAAKhB,SAAS,CAAEe,UAAU,KA3B9B,EA8BEE,WAAa,SAACC,GACZA,EAAMC,iBACN,EAAKnB,SAAS,CAAEe,UAAU,KAhC9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,QAASxB,KAAKmB,WACxCI,SAASC,iBAAiB,cAAexB,KAAKoB,YAE9CpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,QAdP,kCAiBE,WACMb,KAAKD,SACPE,OAAOS,cAAcV,KAAKD,SAG5BwB,SAASE,oBAAoB,QAASzB,KAAKmB,WAC3CI,SAASE,oBAAoB,cAAezB,KAAKoB,cAvBrD,oBAmCE,WACE,MAAgCpB,KAAKH,MAA7BqB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAzCvC,GAAyBK,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.a3cac17a.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getCurrentTime() {\n  const time = new Date();\n\n  return time.toUTCString().slice(-12, -4);\n}\n\ninterface State {\n  today: string;\n}\n\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: getCurrentTime(),\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: getCurrentTime() });\n\n      // eslint-disable-next-line no-console\n      console.info(`${this.state.today}`);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n    // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    document.addEventListener('click', this.leftClick);\n    document.addEventListener('contextmenu', this.rightClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n\n    document.removeEventListener('click', this.leftClick);\n    document.removeEventListener('contextmenu', this.rightClick);\n  }\n\n  leftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  rightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n\n// export const App: React.FC = () => {\n//   const today = new Date();\n//   let clockName = 'Clock-0';\n\n//   // This code starts a timer\n//   const timerId = window.setInterval(() => {\n//     clockName = getRandomName();\n//   }, 3300);\n\n//   // this code stops the timer\n//   window.clearInterval(timerId);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>React clock</h1>\n\n//       <div className=\"Clock\">\n//         <strong className=\"Clock__name\">\n//           {clockName}\n//         </strong>\n\n//         {' time is '}\n\n//         <span className=\"Clock__time\">\n//           {today.toUTCString().slice(-12, -4)}\n//         </span>\n//       </div>\n//     </div>\n//   );\n// };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}